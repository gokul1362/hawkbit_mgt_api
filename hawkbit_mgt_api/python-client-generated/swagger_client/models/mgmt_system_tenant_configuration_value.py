# coding: utf-8

"""
    hawkBit REST APIs

    Eclipse hawkBitâ„¢ is a domain-independent back-end framework for rolling out software updates to constrained edge devices as well as more powerful controllers and gateways connected to IP based networking infrastructure.   # noqa: E501

    OpenAPI spec version: v1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class MgmtSystemTenantConfigurationValue(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'value': 'object',
        '_global': 'bool',
        'last_modified_at': 'int',
        'last_modified_by': 'str',
        'created_at': 'int',
        'created_by': 'str',
        'links': 'Links'
    }

    attribute_map = {
        'value': 'value',
        '_global': 'global',
        'last_modified_at': 'lastModifiedAt',
        'last_modified_by': 'lastModifiedBy',
        'created_at': 'createdAt',
        'created_by': 'createdBy',
        'links': '_links'
    }

    def __init__(self, value=None, _global=None, last_modified_at=None, last_modified_by=None, created_at=None, created_by=None, links=None):  # noqa: E501
        """MgmtSystemTenantConfigurationValue - a model defined in Swagger"""  # noqa: E501
        self._value = None
        self.__global = None
        self._last_modified_at = None
        self._last_modified_by = None
        self._created_at = None
        self._created_by = None
        self._links = None
        self.discriminator = None
        if value is not None:
            self.value = value
        if _global is not None:
            self._global = _global
        if last_modified_at is not None:
            self.last_modified_at = last_modified_at
        if last_modified_by is not None:
            self.last_modified_by = last_modified_by
        if created_at is not None:
            self.created_at = created_at
        if created_by is not None:
            self.created_by = created_by
        if links is not None:
            self.links = links

    @property
    def value(self):
        """Gets the value of this MgmtSystemTenantConfigurationValue.  # noqa: E501

        Current value of of configuration parameter  # noqa: E501

        :return: The value of this MgmtSystemTenantConfigurationValue.  # noqa: E501
        :rtype: object
        """
        return self._value

    @value.setter
    def value(self, value):
        """Sets the value of this MgmtSystemTenantConfigurationValue.

        Current value of of configuration parameter  # noqa: E501

        :param value: The value of this MgmtSystemTenantConfigurationValue.  # noqa: E501
        :type: object
        """

        self._value = value

    @property
    def _global(self):
        """Gets the _global of this MgmtSystemTenantConfigurationValue.  # noqa: E501

        true - if the current value is the global configuration value, false - if there is a tenant specific value configured  # noqa: E501

        :return: The _global of this MgmtSystemTenantConfigurationValue.  # noqa: E501
        :rtype: bool
        """
        return self.__global

    @_global.setter
    def _global(self, _global):
        """Sets the _global of this MgmtSystemTenantConfigurationValue.

        true - if the current value is the global configuration value, false - if there is a tenant specific value configured  # noqa: E501

        :param _global: The _global of this MgmtSystemTenantConfigurationValue.  # noqa: E501
        :type: bool
        """

        self.__global = _global

    @property
    def last_modified_at(self):
        """Gets the last_modified_at of this MgmtSystemTenantConfigurationValue.  # noqa: E501

        Entity was last modified at (timestamp UTC in milliseconds)  # noqa: E501

        :return: The last_modified_at of this MgmtSystemTenantConfigurationValue.  # noqa: E501
        :rtype: int
        """
        return self._last_modified_at

    @last_modified_at.setter
    def last_modified_at(self, last_modified_at):
        """Sets the last_modified_at of this MgmtSystemTenantConfigurationValue.

        Entity was last modified at (timestamp UTC in milliseconds)  # noqa: E501

        :param last_modified_at: The last_modified_at of this MgmtSystemTenantConfigurationValue.  # noqa: E501
        :type: int
        """

        self._last_modified_at = last_modified_at

    @property
    def last_modified_by(self):
        """Gets the last_modified_by of this MgmtSystemTenantConfigurationValue.  # noqa: E501

        Entity was last modified by (User, AMQP-Controller, anonymous etc.)  # noqa: E501

        :return: The last_modified_by of this MgmtSystemTenantConfigurationValue.  # noqa: E501
        :rtype: str
        """
        return self._last_modified_by

    @last_modified_by.setter
    def last_modified_by(self, last_modified_by):
        """Sets the last_modified_by of this MgmtSystemTenantConfigurationValue.

        Entity was last modified by (User, AMQP-Controller, anonymous etc.)  # noqa: E501

        :param last_modified_by: The last_modified_by of this MgmtSystemTenantConfigurationValue.  # noqa: E501
        :type: str
        """

        self._last_modified_by = last_modified_by

    @property
    def created_at(self):
        """Gets the created_at of this MgmtSystemTenantConfigurationValue.  # noqa: E501

        Entity was originally created at (timestamp UTC in milliseconds)  # noqa: E501

        :return: The created_at of this MgmtSystemTenantConfigurationValue.  # noqa: E501
        :rtype: int
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this MgmtSystemTenantConfigurationValue.

        Entity was originally created at (timestamp UTC in milliseconds)  # noqa: E501

        :param created_at: The created_at of this MgmtSystemTenantConfigurationValue.  # noqa: E501
        :type: int
        """

        self._created_at = created_at

    @property
    def created_by(self):
        """Gets the created_by of this MgmtSystemTenantConfigurationValue.  # noqa: E501

        Entity was originally created by (User, AMQP-Controller, anonymous etc.)  # noqa: E501

        :return: The created_by of this MgmtSystemTenantConfigurationValue.  # noqa: E501
        :rtype: str
        """
        return self._created_by

    @created_by.setter
    def created_by(self, created_by):
        """Sets the created_by of this MgmtSystemTenantConfigurationValue.

        Entity was originally created by (User, AMQP-Controller, anonymous etc.)  # noqa: E501

        :param created_by: The created_by of this MgmtSystemTenantConfigurationValue.  # noqa: E501
        :type: str
        """

        self._created_by = created_by

    @property
    def links(self):
        """Gets the links of this MgmtSystemTenantConfigurationValue.  # noqa: E501


        :return: The links of this MgmtSystemTenantConfigurationValue.  # noqa: E501
        :rtype: Links
        """
        return self._links

    @links.setter
    def links(self, links):
        """Sets the links of this MgmtSystemTenantConfigurationValue.


        :param links: The links of this MgmtSystemTenantConfigurationValue.  # noqa: E501
        :type: Links
        """

        self._links = links

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(MgmtSystemTenantConfigurationValue, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, MgmtSystemTenantConfigurationValue):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
